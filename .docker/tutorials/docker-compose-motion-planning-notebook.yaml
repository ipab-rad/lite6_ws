version: "3"

services: 
  control_server:
    image: ghcr.io/ipab-rad/lite6_control:rolling
    networks:
      - ros_application
    build: 
      context: ../../
      dockerfile: .docker/control/Dockerfile.control
    devices:
      - "/dev:/dev"
    privileged: true
    cap_add:
      - SYS_NICE
    ulimits:
      rtprio: 70
      rttime: -1 # corresponds to 'unlimited'
      memlock: 8428281856
    command: ros2 launch lite6_control_demos control_server.launch.py # replace with command for specific tutorial
    deploy:
      placement:
        constraints:
          - node.hostname == robot

  foxglove:
    image: ghcr.io/foxglove/studio:latest
    ports:
      - target: 8765
        published: 8765
        protocol: tcp
        mode: host
    networks:
      - ros_application
    volumes:
      - ../../.foxglove/xarm_joint_positions.json:/foxglove/default-layout.json
    deploy:
      placement:
        constraints:
          - node.hostname == thor
  
  foxglove_bridge:
    image: ghcr.io/ipab-rad/foxglove_bridge:rolling
    networks:
      - ros_application
    deploy:
      placement:
        constraints:
          - node.hostname == thor

  moveit:
    image: ghcr.io/ipab-rad/lite6_motion_planning:rolling
    build: 
      context: ../../
      dockerfile: .docker/motion_planning/Dockerfile.motion_planning
    environment:
      - DISPLAY=${DISPLAY}
      - XAUTHORITY=${DOCKER_XAUTH}
    volumes:
      - /tmp/.X11-unix:/tml/.X11-unix:rw
      - ${DOCKER_XAUTH}:${DOCKER_XAUTH}
    networks:
      - ros_application
    devices:
      - "/dev:/dev"
    privileged: true
    command: ros2 launch lite6_motion_planning_demos motion_planning_prerequisites.launch.py
    deploy:
      placement:
        constraints:
          - node.hostname == thor

  notebook_server:
    image: ghcr.io/ipab-rad/lite6_motion_planning:rolling
    build: 
      context: ../../
      dockerfile: .docker/motion_planning/Dockerfile.motion_planning
    networks:
      - ros_application
    ports:
      - target: 8888
        published: 8888
        protocol: tcp
        mode: host
    command: python3 -m notebook --allow-root --NotebookApp.token='' # TODO: move to local config
    deploy:
      placement:
        constraints:
          - node.hostname == thor


networks:
   ros_application:
     name: "host"
     external: true
